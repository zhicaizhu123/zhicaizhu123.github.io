(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{175:function(t,s,n){"use strict";n.r(s);var e=n(0),a=Object(e.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("p",[n("a",{attrs:{href:"http://nginx.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载地址"),n("OutboundLink")],1)]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("由于IP地址的数量有限，因此经常存在多个主机域名对应同一个ip的情况，这个时候可以按照server_name通过server块来定义虚拟主机，每个server块是一个虚拟主机，处理满足相应listen端口")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),n("ul",[n("li",[n("p",[t._v("安装openssl"),n("br"),t._v(" "),n("a",{attrs:{href:"http://slproweb.com/products/Win32OpenSSL.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("window openssl下载地址"),n("OutboundLink")],1)])]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12)])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"前端使用nginx反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端使用nginx反向代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 前端使用nginx反向代理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"nginx-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-安装","aria-hidden":"true"}},[this._v("#")]),this._v(" nginx 安装")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"nginx-server-配置结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-server-配置结构","aria-hidden":"true"}},[this._v("#")]),this._v(" nginx server 配置结构")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("server {\n    # http协议为80， https协议为443\n    listen       80; \n    \n    # 假如当前服务的域名是 xxx.com\n    # 同时需要在host文件里添加 127.0.0.1 xxx.com 配置项\n    server_name  xxx.com;\n    \n    # 通用匹配\n    location / {\n        # 假如端口号为9001\n        proxy_pass http://127.0.0.1:9001;\n    }\n    \n    # 添加访问目录为 /api 的代理配置\n    location /api { \n        # serverip 为接口服务器ip\n    \tproxy_pass   http://serverip;\n    \t# onlinehost 为线上域名\n    \tproxy_set_header Host onlinehost.com;\n   }\n    ...\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"server-配置项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-配置项","aria-hidden":"true"}},[this._v("#")]),this._v(" server 配置项")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"server-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-name","aria-hidden":"true"}},[this._v("#")]),this._v(" server_name")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location","aria-hidden":"true"}},[this._v("#")]),this._v(" location")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("location会尝试根据用户请求中的URI来匹配设置的表达式  并选中最终结果中的配置来处理用户的请求")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("p",[n("strong",[t._v("语法规则location [=|~|~*|^~|@] / uri / { … }")])]),t._v(" "),n("ul",[n("li",[t._v("/ 通用匹配，任何请求都会匹配到。")]),t._v(" "),n("li",[t._v("= 表示把uri作为字符串，与参数中的URI作完全匹配")]),t._v(" "),n("li",[t._v("^~ 表示匹配URI的时候，如果该location是最佳匹配，那么对于匹配这个location的字符串不在进行正则表达式的匹配检测")]),t._v(" "),n("li",[t._v("~ 进行正则表达式匹配的时候，区分大小写")]),t._v(" "),n("li",[t._v("~* 进行正则表达式匹配的时候，不区分大小写")]),t._v(" "),n("li",[t._v("!~和!~*分别为区分大小写不匹配及不区分大小写不匹配 的正则")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("匹配优先级：")]),n("br"),t._v("\n首先匹配 =，其次匹配 ^~, 其次是按文件中顺序的正则匹配，最后是交给 / 通用匹配。当有匹配成功时候，停止匹配，按当前匹配规则处理请求。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("示例代码：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 规则A\nlocation = /guide.html {  \n    ...\n}  \n\n# 规则B\nlocation ^~ /static/ {  \n    ...  \n}  \n\n# 规则C\nlocation ~ \\.(gif|jpg|png|js|css)$ {  \n    ... \n}  \n\n# 规则D\nlocation ~* \\.png$ {  \n    ...  \n}  \n\n# 规则E\nlocation !~ \\.html$ {  \n    ...  \n}  \n\n# 规则F\nlocation / {  \n    ...  \n}  \n")])])]),n("p",[t._v("匹配结果："),n("br"),t._v("\nhttp://xxx.com/guide.html => 匹配规则A"),n("br"),t._v("\nhttp://xxx.com/static/logo.png => 匹配规则B"),n("br"),t._v("\nhttp://xxx.com/logo.png => 匹配规则C和规则D， 但是优先匹配规则C，规则D不起作用"),n("br"),t._v("\nhttp://xxx.com/logo.PNG => 匹配规则D ，因为D不区分大小写，C区分大小写"),n("br"),t._v("\nhttp://xxx.com/test.html => 符合匹配规则E但是不会匹配到，规则E属于排除法，比较少用"),n("br"),t._v("\nhttp://xxx.com/homework/ => 匹配规则F，因为前面的规则都不匹配")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"使用ssl模块配置支持https访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用ssl模块配置支持https访问","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用ssl模块配置支持HTTPS访问")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("配置OpenSSL环境变量"),s("br"),this._v("\n系统变量PATH字段后面拼接openssl执行文件目录"),s("code",[this._v("D:\\path\\to\\OpenSSL-Win64\\bin")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("li",[n("p",[t._v("生成证书")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.创建服务器私钥，命令会让你输入一个口令")]),t._v("\nopenssl genrsa -des3 -out server.key 1024  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成私钥")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.创建签名请求的证书（CSR）")]),t._v("\nopenssl req -new -key server.key -out server.csr  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成证书颁发机构,用于颁发公钥")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.在加载SSL支持的Nginx并使用上述私钥时除去必须的口令")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" server.key server.key.org\nopenssl rsa -in server.key.org -out server.key  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 除去密码以便reload询问时不需要密码")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4.标记证书使用上述私钥和CSR")]),t._v("\nopenssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n\n")])])]),n("p",[t._v("最终生成一下文件")]),t._v(" "),n("p",[n("a",{attrs:{"data-fancybox":"",title:"",href:"https://user-gold-cdn.xitu.io/2019/1/19/168641b14f8fbf0b?w=625&h=106&f=png&s=12163"}},[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/1/19/168641b14f8fbf0b?w=625&h=106&f=png&s=12163",alt:""}})])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("li",[n("p",[t._v("修改nginx配置文件")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http协议为80， https协议为443")]),t._v("\nlisten       443 ssl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改为443 ssl")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl on;")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 假如当前服务的域名是 xxx.com")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同时需要在host文件里添加 127.0.0.1 xxx.com 配置项")]),t._v("\nserver_name  xxx.com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增 start")]),t._v("\nssl_certificate      path\\to\\server.crt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用openssl生成的证书位置")]),t._v("\nssl_certificate_key  path\\to\\server.key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用openssl生成的私钥位置")]),t._v("\nssl_session_timeout  5m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nssl_protocols  SSLv2 SSLv3 TLSv1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定密码为openssl支持的格式 ")]),t._v("\nssl_ciphers  HIGH:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aNULL:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("MD5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 密码加密方式")]),t._v("\nssl_prefer_server_ciphers   on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 依赖SSLv3和TLSv1协议的服务器密码将优先于客户端密码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增 end")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通用匹配")]),t._v("\nlocation / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 假如端口号为9001")]),t._v("\n    proxy_pass http://127.0.0.1:9001"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加访问目录为 /api 的代理配置")]),t._v("\nlocation /api "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# serverip 为接口服务器ip，注意使用https协议")]),t._v("\n\tproxy_pass   https://serverip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# onlinehost 为线上域名")]),t._v("\n\tproxy_set_header Host onlinehost.com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])])])}],!1,null,null,null);a.options.__file="README.md";s.default=a.exports}}]);